% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/targets.R
\name{flush_targets}
\alias{flush_targets}
\title{Delete and invalidate reverse dependencies}
\usage{
flush_targets(from, network = targets::tar_network())
}
\arguments{
\item{from}{Node to delete from}

\item{network}{Output of targets::tar_network()}
}
\value{
Character vector of nodes that were invalidated and deleted
}
\description{
Targets doesn't play perfectly with praat scripts since the usual workflow
is to create large numbers of files. When these files are recreated, targets
doesn't flag them as being out of date since the files themselves aren't
tracked (too many to do so and also the repository option wouldn't work for
me). To circumvent this, this function will invalidate and delete all of the
downstream target information from a given node, which will force them
to be rerun.
}
\details{
tar_network() can take a while to run, so it's recommended to save this
to a variable if you think you might need to rerun this a few times as
you try new things in praat.
}
