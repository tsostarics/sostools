% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brms_fit_check.R
\name{determine_refit}
\alias{determine_refit}
\title{Determine whether model should be refit based on diagnostics}
\usage{
determine_refit(
  refit_diagnostics,
  ignore = c("software_version_changed", "scode_changed")
)
}
\arguments{
\item{refit_diagnostics}{List of diagnostics from `diagnose_refit`}

\item{ignore}{Specific diagnostics to ignore when refitting. Ignores
software version changes and stancode differences by default.}
}
\value{
String to pass to `file_refit` parameter of `brm()`
}
\description{
Returns "always" if the model should be refit based on diagnostics, or
"never" if either the diagnostics are okay.
}
\details{
Note that while you can use this to determine whether or not you want to
refit a model, updates to packages/software often bring improvements and
bug fixes. The intent is to use this interactively when you haven't set up
by-project environments for package versions & don't want to spend time
refitting expensive models when all that's changed is a minor software
update.
}
